#include <array>
#include <cstddef>
#include <cstdint>
#include <iostream>
#include <vector>

#include "hungarian_algo.hpp"

namespace {

int TestHungarianAlgorithm() {
    const std::array<std::vector<std::vector<std::uint32_t>>, 8> input{{
        {
            {1},
        },
        {
            {1, 6, 1},
            {3, 8, 5},
            {2, 7, 6},
        },
        {
            {32, 28, 4, 26, 4},
            {17, 19, 4, 17, 4},
            {4, 4, 5, 4, 4},
            {17, 14, 4, 14, 4},
            {21, 16, 4, 13, 4},
        },
        {
            {1, 1, 1, 0, 0, 0},
            {1, 1, 0, 1, 0, 0},
            {1, 0, 1, 1, 1, 0},
            {0, 1, 1, 1, 0, 0},
            {0, 0, 1, 0, 1, 1},
            {0, 0, 0, 0, 1, 1},
        },
        {
            {61, 80, 89, 22, 41, 76, 79, 62, 4, 58},
            {54, 64, 61, 18, 43, 37, 67, 62, 91, 2},
            {23, 87, 35, 1, 39, 90, 72, 51, 15, 96},
            {69, 69, 67, 45, 47, 90, 38, 94, 10, 89},
            {64, 47, 50, 79, 64, 86, 9, 41, 91, 46},
            {52, 75, 43, 64, 40, 56, 73, 76, 14, 90},
            {73, 79, 98, 49, 39, 39, 87, 75, 57, 63},
            {68, 41, 23, 22, 48, 63, 2, 7, 19, 59},
            {36, 25, 45, 11, 25, 11, 96, 15, 22, 27},
            {17, 33, 25, 22, 39, 26, 48, 60, 11, 57},
        },
        {
            {10, 64, 15, 53, 93, 95, 90, 7, 38, 42},
            {77, 77, 57, 20, 45, 28, 48, 71, 15, 62},
            {61, 43, 12, 59, 53, 30, 81, 24, 70, 62},
            {39, 37, 92, 20, 57, 77, 94, 10, 85, 90},
            {33, 30, 40, 93, 46, 20, 69, 81, 66, 39},
            {15, 61, 41, 42, 85, 31, 17, 46, 53, 68},
            {11, 88, 7, 57, 67, 69, 60, 55, 63, 1},
            {58, 24, 72, 44, 67, 81, 28, 58, 31, 5},
            {82, 54, 30, 5, 48, 41, 23, 91, 59, 10},
            {21, 76, 10, 71, 11, 23, 79, 18, 8, 33},
        },
        {
            {47, 6, 53, 82, 11, 67, 56, 37, 82, 25},
            {75, 35, 63, 16, 44, 75, 58, 53, 94, 26},
            {13, 32, 27, 71, 53, 34, 27, 21, 92, 96},
            {46, 7, 62, 76, 76, 36, 33, 72, 17, 38},
            {43, 94, 55, 12, 9, 9, 60, 18, 80, 71},
            {2, 54, 84, 11, 60, 75, 48, 32, 76, 23},
            {43, 52, 20, 29, 41, 75, 37, 80, 38, 95},
            {92, 23, 28, 18, 25, 90, 84, 35, 97, 83},
            {94, 59, 67, 56, 88, 16, 82, 28, 46, 80},
            {75, 76, 86, 2, 79, 1, 49, 8, 72, 69},
        },
        {
            {1, 0, 1, 0, 1, 1, 0, 1, 0, 1},
            {1, 1, 1, 0, 0, 1, 0, 1, 0, 0},
            {1, 0, 1, 1, 1, 0, 1, 1, 0, 0},
            {0, 1, 0, 0, 0, 0, 1, 0, 1, 0},
            {1, 0, 1, 0, 1, 1, 0, 0, 0, 1},
            {0, 0, 0, 1, 0, 1, 0, 0, 0, 1},
            {1, 0, 0, 1, 1, 1, 1, 0, 0, 1},
            {0, 1, 0, 0, 1, 0, 0, 1, 1, 1},
            {0, 1, 1, 0, 0, 0, 0, 0, 0, 0},
            {1, 0, 0, 0, 1, 1, 1, 0, 0, 1},
        },
    }};
    constexpr std::array output = {1U, 11U, 39U, 0U, 194U, 125U, 149U, 0U};
    constexpr std::size_t total_tests = std::size(output);
    static_assert(input.size() == total_tests);

    for (std::size_t k = 0; k < total_tests; k++) {
        const std::uint32_t ans = hungarian_algo::min_assignment(input[k]);
        std::cout << "Test " << (k + 1) << ((ans == output[k]) ? "" : " not")
                  << " passed\nAlgorithm answer: " << ans << "\nCorrect answer: " << output[k]
                  << '\n';
        if (ans != output[k]) {
            return 1;
        }
    }

    std::cout << "All tests passed\n";

    return 0;
}

}  // namespace

int main() {
    return TestHungarianAlgorithm();
}
